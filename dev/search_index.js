var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = BudanTables","category":"page"},{"location":"#BudanTables","page":"Home","title":"BudanTables","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for BudanTables.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [BudanTables]","category":"page"},{"location":"#BudanTables.budantable","page":"Home","title":"BudanTables.budantable","text":"Plots the Budan's table of a polynomial (see https://hal.inria.fr/hal-00653762/document). The input is a polynomial of type T for which\n\ndegree(p::T) and derivative(p::T, i::Int) must be defined\nit is compatible with function computing roots (see set_getting_roots).\n\nThe default are type T==Polynomial and Polynomials.roots from Polynomials.jl. But, if PolynomialRoots.jl is loaded, it uses PolynomialRoots.roots (accepting polynomials of type Polynomial).\n\nExamples\n\nDefault use, type Polynomials and roots Polynomials.roots\n\n   using Plots\n   using Polynomials\n   using BudanTables\n   P = fromroots([0,0,1,2,2,4,4])\n   budantable(P)\n\nUse type Polynomials and roots PolynomialRoots.roots\n\n   using Plots\n   using Polynomials\n   using PolynomialRoots\n   using BudanTables\n   P = fromroots([0,0,1,2,2,4,4])\n   budantable(P)\n\nOr define our own API for julia vectors:\n\n   using Plots\n   using BudanTables\n\n   # Setting function to compute roots from a polynomial represented\n   # as a vector.\n   import PolynomialRoots\n   _BigFloat(A::AbstractArray) = BigFloat.(A)\n   # Notice we do not precompose by `coeffs`\n   set_getting_roots(PolynomialRoots.rootsâˆ˜_BigFloat)\n\n   BudanTables.degree(v::AbstractVector) = length(v) - 1\n   BudanTables.derivative(v::AbstractVector) = .*(v[begin+1:end], 1:(length(v)-1))\n   function BudanTables.derivative(v::AbstractVector, i::Int)\n       out = copy(v)\n       while i > 0\n           i-=1\n           out = derivative(out)\n       end\n       return out\n   end\n\n   import Polynomials\n   P = Polynomials.coeffs(Polynomials.fromroots([0,0,1,2,2,4,4]))\n   budantable(P)\n\n\n\n\n\n","category":"function"},{"location":"#BudanTables.set_getting_roots-Tuple{Any}","page":"Home","title":"BudanTables.set_getting_roots","text":"set_getting_roots(f)\n\n\nSets the function used to compute the roots of polynomials building a Budan's table. The input is a function f computing the roots of a polynomial represented as an object of type T, for which degree(p::T) and derivative(p::T) must be defined.\n\nSee also budantable\n\n\n\n\n\n","category":"method"}]
}
